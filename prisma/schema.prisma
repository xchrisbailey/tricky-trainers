// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "prisma-zod-generator"
  output   = "../src/lib/generated/"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AuthUser {
  id           String        @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  email        String
  first_name   String
  last_name    String
  dogs         Dog[]
  tricks       Trick[]

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model Dog {
  id         String    @id @default(cuid())
  name       String
  flare      String
  breed      String
  age_years  Int
  age_months Int
  AuthUser   AuthUser? @relation(fields: [user_id], references: [id])
  user_id    String?
}

model Trick {
  id          String    @id @default(cuid())
  name        String    @unique
  description String
  example     String    @unique
  difficulty  Int
  User        AuthUser? @relation(fields: [added_by], references: [id])
  added_by    String
  created_on  DateTime  @default(now())
}
